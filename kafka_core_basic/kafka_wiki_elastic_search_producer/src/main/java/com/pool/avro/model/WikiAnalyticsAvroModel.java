/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.pool.avro.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class WikiAnalyticsAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4580919284050104893L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"WikiAnalyticsAvroModel\",\"namespace\":\"com.pool.avro.model\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"]},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"title_url\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"comment\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"user\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"bot\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"minor\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"notify_url\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<WikiAnalyticsAvroModel> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<WikiAnalyticsAvroModel> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<WikiAnalyticsAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<WikiAnalyticsAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<WikiAnalyticsAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this WikiAnalyticsAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a WikiAnalyticsAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a WikiAnalyticsAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static WikiAnalyticsAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.Long id;
  private java.lang.String type;
  private java.lang.String title_url;
  private java.lang.String comment;
  private java.lang.String user;
  private java.lang.String bot;
  private java.lang.String minor;
  private java.lang.String notify_url;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public WikiAnalyticsAvroModel() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param type The new value for type
   * @param title_url The new value for title_url
   * @param comment The new value for comment
   * @param user The new value for user
   * @param bot The new value for bot
   * @param minor The new value for minor
   * @param notify_url The new value for notify_url
   */
  public WikiAnalyticsAvroModel(java.lang.Long id, java.lang.String type, java.lang.String title_url, java.lang.String comment, java.lang.String user, java.lang.String bot, java.lang.String minor, java.lang.String notify_url) {
    this.id = id;
    this.type = type;
    this.title_url = title_url;
    this.comment = comment;
    this.user = user;
    this.bot = bot;
    this.minor = minor;
    this.notify_url = notify_url;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return type;
    case 2: return title_url;
    case 3: return comment;
    case 4: return user;
    case 5: return bot;
    case 6: return minor;
    case 7: return notify_url;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: type = value$ != null ? value$.toString() : null; break;
    case 2: title_url = value$ != null ? value$.toString() : null; break;
    case 3: comment = value$ != null ? value$.toString() : null; break;
    case 4: user = value$ != null ? value$.toString() : null; break;
    case 5: bot = value$ != null ? value$.toString() : null; break;
    case 6: minor = value$ != null ? value$.toString() : null; break;
    case 7: notify_url = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public java.lang.String getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.String value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'title_url' field.
   * @return The value of the 'title_url' field.
   */
  public java.lang.String getTitleUrl() {
    return title_url;
  }


  /**
   * Sets the value of the 'title_url' field.
   * @param value the value to set.
   */
  public void setTitleUrl(java.lang.String value) {
    this.title_url = value;
  }

  /**
   * Gets the value of the 'comment' field.
   * @return The value of the 'comment' field.
   */
  public java.lang.String getComment() {
    return comment;
  }


  /**
   * Sets the value of the 'comment' field.
   * @param value the value to set.
   */
  public void setComment(java.lang.String value) {
    this.comment = value;
  }

  /**
   * Gets the value of the 'user' field.
   * @return The value of the 'user' field.
   */
  public java.lang.String getUser() {
    return user;
  }


  /**
   * Sets the value of the 'user' field.
   * @param value the value to set.
   */
  public void setUser(java.lang.String value) {
    this.user = value;
  }

  /**
   * Gets the value of the 'bot' field.
   * @return The value of the 'bot' field.
   */
  public java.lang.String getBot() {
    return bot;
  }


  /**
   * Sets the value of the 'bot' field.
   * @param value the value to set.
   */
  public void setBot(java.lang.String value) {
    this.bot = value;
  }

  /**
   * Gets the value of the 'minor' field.
   * @return The value of the 'minor' field.
   */
  public java.lang.String getMinor() {
    return minor;
  }


  /**
   * Sets the value of the 'minor' field.
   * @param value the value to set.
   */
  public void setMinor(java.lang.String value) {
    this.minor = value;
  }

  /**
   * Gets the value of the 'notify_url' field.
   * @return The value of the 'notify_url' field.
   */
  public java.lang.String getNotifyUrl() {
    return notify_url;
  }


  /**
   * Sets the value of the 'notify_url' field.
   * @param value the value to set.
   */
  public void setNotifyUrl(java.lang.String value) {
    this.notify_url = value;
  }

  /**
   * Creates a new WikiAnalyticsAvroModel RecordBuilder.
   * @return A new WikiAnalyticsAvroModel RecordBuilder
   */
  public static com.pool.avro.model.WikiAnalyticsAvroModel.Builder newBuilder() {
    return new com.pool.avro.model.WikiAnalyticsAvroModel.Builder();
  }

  /**
   * Creates a new WikiAnalyticsAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new WikiAnalyticsAvroModel RecordBuilder
   */
  public static com.pool.avro.model.WikiAnalyticsAvroModel.Builder newBuilder(com.pool.avro.model.WikiAnalyticsAvroModel.Builder other) {
    if (other == null) {
      return new com.pool.avro.model.WikiAnalyticsAvroModel.Builder();
    } else {
      return new com.pool.avro.model.WikiAnalyticsAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new WikiAnalyticsAvroModel RecordBuilder by copying an existing WikiAnalyticsAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new WikiAnalyticsAvroModel RecordBuilder
   */
  public static com.pool.avro.model.WikiAnalyticsAvroModel.Builder newBuilder(com.pool.avro.model.WikiAnalyticsAvroModel other) {
    if (other == null) {
      return new com.pool.avro.model.WikiAnalyticsAvroModel.Builder();
    } else {
      return new com.pool.avro.model.WikiAnalyticsAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for WikiAnalyticsAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<WikiAnalyticsAvroModel>
    implements org.apache.avro.data.RecordBuilder<WikiAnalyticsAvroModel> {

    private java.lang.Long id;
    private java.lang.String type;
    private java.lang.String title_url;
    private java.lang.String comment;
    private java.lang.String user;
    private java.lang.String bot;
    private java.lang.String minor;
    private java.lang.String notify_url;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.pool.avro.model.WikiAnalyticsAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.type)) {
        this.type = data().deepCopy(fields()[1].schema(), other.type);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.title_url)) {
        this.title_url = data().deepCopy(fields()[2].schema(), other.title_url);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.comment)) {
        this.comment = data().deepCopy(fields()[3].schema(), other.comment);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.user)) {
        this.user = data().deepCopy(fields()[4].schema(), other.user);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.bot)) {
        this.bot = data().deepCopy(fields()[5].schema(), other.bot);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.minor)) {
        this.minor = data().deepCopy(fields()[6].schema(), other.minor);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.notify_url)) {
        this.notify_url = data().deepCopy(fields()[7].schema(), other.notify_url);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
    }

    /**
     * Creates a Builder by copying an existing WikiAnalyticsAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(com.pool.avro.model.WikiAnalyticsAvroModel other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.type)) {
        this.type = data().deepCopy(fields()[1].schema(), other.type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.title_url)) {
        this.title_url = data().deepCopy(fields()[2].schema(), other.title_url);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.comment)) {
        this.comment = data().deepCopy(fields()[3].schema(), other.comment);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.user)) {
        this.user = data().deepCopy(fields()[4].schema(), other.user);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.bot)) {
        this.bot = data().deepCopy(fields()[5].schema(), other.bot);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.minor)) {
        this.minor = data().deepCopy(fields()[6].schema(), other.minor);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.notify_url)) {
        this.notify_url = data().deepCopy(fields()[7].schema(), other.notify_url);
        fieldSetFlags()[7] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.pool.avro.model.WikiAnalyticsAvroModel.Builder setId(java.lang.Long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.pool.avro.model.WikiAnalyticsAvroModel.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public java.lang.String getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public com.pool.avro.model.WikiAnalyticsAvroModel.Builder setType(java.lang.String value) {
      validate(fields()[1], value);
      this.type = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public com.pool.avro.model.WikiAnalyticsAvroModel.Builder clearType() {
      type = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'title_url' field.
      * @return The value.
      */
    public java.lang.String getTitleUrl() {
      return title_url;
    }


    /**
      * Sets the value of the 'title_url' field.
      * @param value The value of 'title_url'.
      * @return This builder.
      */
    public com.pool.avro.model.WikiAnalyticsAvroModel.Builder setTitleUrl(java.lang.String value) {
      validate(fields()[2], value);
      this.title_url = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'title_url' field has been set.
      * @return True if the 'title_url' field has been set, false otherwise.
      */
    public boolean hasTitleUrl() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'title_url' field.
      * @return This builder.
      */
    public com.pool.avro.model.WikiAnalyticsAvroModel.Builder clearTitleUrl() {
      title_url = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'comment' field.
      * @return The value.
      */
    public java.lang.String getComment() {
      return comment;
    }


    /**
      * Sets the value of the 'comment' field.
      * @param value The value of 'comment'.
      * @return This builder.
      */
    public com.pool.avro.model.WikiAnalyticsAvroModel.Builder setComment(java.lang.String value) {
      validate(fields()[3], value);
      this.comment = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'comment' field has been set.
      * @return True if the 'comment' field has been set, false otherwise.
      */
    public boolean hasComment() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'comment' field.
      * @return This builder.
      */
    public com.pool.avro.model.WikiAnalyticsAvroModel.Builder clearComment() {
      comment = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'user' field.
      * @return The value.
      */
    public java.lang.String getUser() {
      return user;
    }


    /**
      * Sets the value of the 'user' field.
      * @param value The value of 'user'.
      * @return This builder.
      */
    public com.pool.avro.model.WikiAnalyticsAvroModel.Builder setUser(java.lang.String value) {
      validate(fields()[4], value);
      this.user = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'user' field has been set.
      * @return True if the 'user' field has been set, false otherwise.
      */
    public boolean hasUser() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'user' field.
      * @return This builder.
      */
    public com.pool.avro.model.WikiAnalyticsAvroModel.Builder clearUser() {
      user = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'bot' field.
      * @return The value.
      */
    public java.lang.String getBot() {
      return bot;
    }


    /**
      * Sets the value of the 'bot' field.
      * @param value The value of 'bot'.
      * @return This builder.
      */
    public com.pool.avro.model.WikiAnalyticsAvroModel.Builder setBot(java.lang.String value) {
      validate(fields()[5], value);
      this.bot = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'bot' field has been set.
      * @return True if the 'bot' field has been set, false otherwise.
      */
    public boolean hasBot() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'bot' field.
      * @return This builder.
      */
    public com.pool.avro.model.WikiAnalyticsAvroModel.Builder clearBot() {
      bot = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'minor' field.
      * @return The value.
      */
    public java.lang.String getMinor() {
      return minor;
    }


    /**
      * Sets the value of the 'minor' field.
      * @param value The value of 'minor'.
      * @return This builder.
      */
    public com.pool.avro.model.WikiAnalyticsAvroModel.Builder setMinor(java.lang.String value) {
      validate(fields()[6], value);
      this.minor = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'minor' field has been set.
      * @return True if the 'minor' field has been set, false otherwise.
      */
    public boolean hasMinor() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'minor' field.
      * @return This builder.
      */
    public com.pool.avro.model.WikiAnalyticsAvroModel.Builder clearMinor() {
      minor = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'notify_url' field.
      * @return The value.
      */
    public java.lang.String getNotifyUrl() {
      return notify_url;
    }


    /**
      * Sets the value of the 'notify_url' field.
      * @param value The value of 'notify_url'.
      * @return This builder.
      */
    public com.pool.avro.model.WikiAnalyticsAvroModel.Builder setNotifyUrl(java.lang.String value) {
      validate(fields()[7], value);
      this.notify_url = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'notify_url' field has been set.
      * @return True if the 'notify_url' field has been set, false otherwise.
      */
    public boolean hasNotifyUrl() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'notify_url' field.
      * @return This builder.
      */
    public com.pool.avro.model.WikiAnalyticsAvroModel.Builder clearNotifyUrl() {
      notify_url = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public WikiAnalyticsAvroModel build() {
      try {
        WikiAnalyticsAvroModel record = new WikiAnalyticsAvroModel();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.type = fieldSetFlags()[1] ? this.type : (java.lang.String) defaultValue(fields()[1]);
        record.title_url = fieldSetFlags()[2] ? this.title_url : (java.lang.String) defaultValue(fields()[2]);
        record.comment = fieldSetFlags()[3] ? this.comment : (java.lang.String) defaultValue(fields()[3]);
        record.user = fieldSetFlags()[4] ? this.user : (java.lang.String) defaultValue(fields()[4]);
        record.bot = fieldSetFlags()[5] ? this.bot : (java.lang.String) defaultValue(fields()[5]);
        record.minor = fieldSetFlags()[6] ? this.minor : (java.lang.String) defaultValue(fields()[6]);
        record.notify_url = fieldSetFlags()[7] ? this.notify_url : (java.lang.String) defaultValue(fields()[7]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<WikiAnalyticsAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<WikiAnalyticsAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<WikiAnalyticsAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<WikiAnalyticsAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.id);
    }

    if (this.type == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.type);
    }

    if (this.title_url == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.title_url);
    }

    if (this.comment == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.comment);
    }

    if (this.user == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.user);
    }

    if (this.bot == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.bot);
    }

    if (this.minor == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.minor);
    }

    if (this.notify_url == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.notify_url);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.id = null;
      } else {
        this.id = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.type = null;
      } else {
        this.type = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.title_url = null;
      } else {
        this.title_url = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.comment = null;
      } else {
        this.comment = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.user = null;
      } else {
        this.user = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.bot = null;
      } else {
        this.bot = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.minor = null;
      } else {
        this.minor = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.notify_url = null;
      } else {
        this.notify_url = in.readString();
      }

    } else {
      for (int i = 0; i < 8; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.id = null;
          } else {
            this.id = in.readLong();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.type = null;
          } else {
            this.type = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.title_url = null;
          } else {
            this.title_url = in.readString();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.comment = null;
          } else {
            this.comment = in.readString();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.user = null;
          } else {
            this.user = in.readString();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.bot = null;
          } else {
            this.bot = in.readString();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.minor = null;
          } else {
            this.minor = in.readString();
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.notify_url = null;
          } else {
            this.notify_url = in.readString();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










